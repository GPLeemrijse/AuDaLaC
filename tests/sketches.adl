
struct Attractor(owner : Bool, tests : MembershipTest) {
	
}

struct AttractorMembership(v : Vertex, a : Attractor, current_test : MembershipTest){
	
	initialise_tests {
		current_test := a.tests;
	}
	
	test_member {
		if current_test != null then {
			if current_test.v == v && current_test.a == a then {
				current_test.result := 1;
			}
			current_test := current_test.next;
		}
	}
}

struct MembershipTest(v : Vertex, a : Attractor, result : Nat, next: MembershipTest) {
	
}

struct Vertex(new_attr : Attractor) {


	create_new_attr {
		new_attr := Attractor();
		AttractorMembership(this, new_attr);
	}

}

struct Edge(s : Vertex, t : Vertex) {
	
	fill_new_attractor {
		if t.new_attr != null then {

		}

	}
}