
    struct Node (reachable : Bool) {
        init {
            Node n_0_0 := Node(true);
            Node n_1_0 := Node(true);
            Node n_2_0 := Node(true);
            Node n_3_0 := Node(true);
            Node n_4_0 := Node(true);
            Node n_5_0 := Node(true);
            Node n_6_0 := Node(true);
            Node n_7_0 := Node(true);
            Node n_8_0 := Node(true);
            Node n_9_0 := Node(true);
            Node n_10_0 := Node(true);
            Node n_11_0 := Node(true);
            Node n_12_0 := Node(true);
            Node n_13_0 := Node(true);
            Node n_14_0 := Node(true);
            Node n_15_0 := Node(true);
            Node n_16_0 := Node(true);
            Node n_17_0 := Node(true);
            Node n_18_0 := Node(true);
            Node n_19_0 := Node(true);
            Node n_20_0 := Node(true);
            Node n_21_0 := Node(true);
            Node n_22_0 := Node(true);
            Node n_23_0 := Node(true);
            Node n_24_0 := Node(true);
            Node n_25_0 := Node(true);
            Node n_26_0 := Node(true);
            Node n_27_0 := Node(true);
            Node n_28_0 := Node(true);
            Node n_29_0 := Node(true);
            Node n_30_0 := Node(true);
            Node n_31_0 := Node(true);
            Node n_0_1 := Node(false);
            Edge e_0_1 := Edge(n_0_0, n_0_1);
            Node n_1_1 := Node(false);
            Edge e_1_1 := Edge(n_1_0, n_1_1);
            Node n_2_1 := Node(false);
            Edge e_2_1 := Edge(n_2_0, n_2_1);
            Node n_3_1 := Node(false);
            Edge e_3_1 := Edge(n_3_0, n_3_1);
            Node n_4_1 := Node(false);
            Edge e_4_1 := Edge(n_4_0, n_4_1);
            Node n_5_1 := Node(false);
            Edge e_5_1 := Edge(n_5_0, n_5_1);
            Node n_6_1 := Node(false);
            Edge e_6_1 := Edge(n_6_0, n_6_1);
            Node n_7_1 := Node(false);
            Edge e_7_1 := Edge(n_7_0, n_7_1);
            Node n_8_1 := Node(false);
            Edge e_8_1 := Edge(n_8_0, n_8_1);
            Node n_9_1 := Node(false);
            Edge e_9_1 := Edge(n_9_0, n_9_1);
            Node n_10_1 := Node(false);
            Edge e_10_1 := Edge(n_10_0, n_10_1);
            Node n_11_1 := Node(false);
            Edge e_11_1 := Edge(n_11_0, n_11_1);
            Node n_12_1 := Node(false);
            Edge e_12_1 := Edge(n_12_0, n_12_1);
            Node n_13_1 := Node(false);
            Edge e_13_1 := Edge(n_13_0, n_13_1);
            Node n_14_1 := Node(false);
            Edge e_14_1 := Edge(n_14_0, n_14_1);
            Node n_15_1 := Node(false);
            Edge e_15_1 := Edge(n_15_0, n_15_1);
            Node n_16_1 := Node(false);
            Edge e_16_1 := Edge(n_16_0, n_16_1);
            Node n_17_1 := Node(false);
            Edge e_17_1 := Edge(n_17_0, n_17_1);
            Node n_18_1 := Node(false);
            Edge e_18_1 := Edge(n_18_0, n_18_1);
            Node n_19_1 := Node(false);
            Edge e_19_1 := Edge(n_19_0, n_19_1);
            Node n_20_1 := Node(false);
            Edge e_20_1 := Edge(n_20_0, n_20_1);
            Node n_21_1 := Node(false);
            Edge e_21_1 := Edge(n_21_0, n_21_1);
            Node n_22_1 := Node(false);
            Edge e_22_1 := Edge(n_22_0, n_22_1);
            Node n_23_1 := Node(false);
            Edge e_23_1 := Edge(n_23_0, n_23_1);
            Node n_24_1 := Node(false);
            Edge e_24_1 := Edge(n_24_0, n_24_1);
            Node n_25_1 := Node(false);
            Edge e_25_1 := Edge(n_25_0, n_25_1);
            Node n_26_1 := Node(false);
            Edge e_26_1 := Edge(n_26_0, n_26_1);
            Node n_27_1 := Node(false);
            Edge e_27_1 := Edge(n_27_0, n_27_1);
            Node n_28_1 := Node(false);
            Edge e_28_1 := Edge(n_28_0, n_28_1);
            Node n_29_1 := Node(false);
            Edge e_29_1 := Edge(n_29_0, n_29_1);
            Node n_30_1 := Node(false);
            Edge e_30_1 := Edge(n_30_0, n_30_1);
            Node n_31_1 := Node(false);
            Edge e_31_1 := Edge(n_31_0, n_31_1);

        }
    }

    struct Edge (n1 : Node, n2 : Node) {
        reachability {
            if n1.reachable then {
                n2.reachable := true;
            }
        }
    }

    init < Fix(reachability)
    