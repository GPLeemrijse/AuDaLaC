struct Node (reachable : Bool, reachable: Bool, something: Nat) {
    init {
        Nat n1 := 1;
        Nat n1 := 2;
        Nat n2 := 3;
    }
    step_node {
        Nat n2 := 0;
        Int n3 := 10;
        if true then {
            Int n3 := 5 + 3;
        }
    }

    init {
        Nat test_nat_not_negative := -1;

        String t := 1;
        Node t3 := this;

        String my_string := "content";
        String other_string := "test";

        if my_string < other_string then {
            t := t + 1;
        }
    }
}

struct Node(test : Nat) {
    
}

struct Edge(n : Node){
    init {
        Node t3 := this;

        n.something.abc := 12;
    }

    step2 {
        Int null_val := null;
        Int stable := this;

    }

    shadowing {
        Int var := 0;
        if true then {
            Int var := 1;
        }

    }
}

Node.init2 < Fix(ste_node) < abc.d